<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ qeli-frontoffice
  ~
  ~ Copyright (C) 2019-2021 Republique et canton de Geneve
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.10</version>
  </parent>

  <groupId>ch.ge.social.qeli</groupId>
  <artifactId>qeli-frontoffice</artifactId>
  <version>1.5.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>qeli-frontoffice</name>
  <description>Questionnaire d'eligibilité (QELI).</description>
  <url>https://github.com/republique-et-canton-de-geneve/qeli-frontoffice</url>
  <developers>
    <developer>
      <name>Action Sociale - État de Genève</name>
      <email>LS-OCSIN-SCLI-SCLI_DCS-AS.DEVELOPPEUR@etat.ge.ch</email>
      <organization>OCSIN-SCLI-DCS-AS</organization>
      <organizationUrl>https://www.ge.ch</organizationUrl>
    </developer>
  </developers>

  <modules>
    <module>qeli-frontoffice-application</module>
    <module>qeli-frontoffice-cypress</module>
    <module>qeli-frontoffice-editique</module>
    <module>qeli-frontoffice-ihm</module>
    <module>qeli-frontoffice-rest</module>
    <module>qeli-frontoffice-service</module>
    <module>qeli-frontoffice-service-api</module>
  </modules>

  <distributionManagement>
    <!-- cf settings.xml pour les définitions des repositories -->
    <repository>
      <id>internal.project.release</id>
      <name>internal.project.release</name>
      <url>${maven2Repository_projet}/project_release</url>
    </repository>

    <snapshotRepository>
      <id>internal.project.snapshot</id>
      <name>internal.project.snapshot</name>
      <url>${maven2Repository_projet}/project_snapshot</url>
    </snapshotRepository>

    <site>
      <id>projects_Website</id>
      <url>${projects_Website}/ch/ge/cti/melusine/${project.artifactId}/${project.version}</url>
    </site>
  </distributionManagement>

  <properties>
    <!-- Build parameters -->
    <build.timestamp>${maven.build.timestamp}</build.timestamp>
    <java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>

    <!-- Test parameters -->
    <ihm.test.skip>true</ihm.test.skip>
    <cypress.test.skip>${skipTests}</cypress.test.skip>

    <sonar.coverage.exclusions>
      **/*Exception.java,
      **dto/*.java
    </sonar.coverage.exclusions>
    <sonar.coverage.jacoco.xmlReportPaths>
      target/site/jacoco/jacoco.xml,../target/site/jacoco-aggregate/jacoco.xml
    </sonar.coverage.jacoco.xmlReportPaths>

    <!-- Plugins versions -->
    <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
    <gitflow-maven-plugin.version>1.18.0</gitflow-maven-plugin.version>
    <gmavenplus-plugin.version>1.13.1</gmavenplus-plugin.version>
    <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
    <maven-jaxb2-plugin.version>0.15.1</maven-jaxb2-plugin.version>

    <!-- Plugin JAR dependencies versions -->
    <lombok-mapstruct.version>0.2.0</lombok-mapstruct.version>
    <jaxb2-basics.version>0.13.1</jaxb2-basics.version>
    <jaxb2-basics-annotate.version>1.1.0</jaxb2-basics-annotate.version>

    <!-- Additional dependencies versions -->
    <botdetect-servlet.version>4.0.beta3.7</botdetect-servlet.version>
    <guava.version>31.1-jre</guava.version>
    <icu4j.version>72.1</icu4j.version>
    <mapstruct.version>1.5.3.Final</mapstruct.version>
    <opencsv.version>5.7.1</opencsv.version>
    <OutilsRapportDialogue.version>1.5</OutilsRapportDialogue.version>
    <spring-boot.version>2.7.10</spring-boot.version>
    <velocity.version>2.3</velocity.version>

    <!-- Test dependencies versions -->
    <spock.version>2.1-groovy-3.0</spock.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Frontoffice modules -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>qeli-frontoffice-application</artifactId>
        <version>${project.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>qeli-frontoffice-cypress</artifactId>
        <version>${project.version}</version>
        <type>war</type>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>qeli-frontoffice-ihm</artifactId>
        <version>${project.version}</version>
        <type>war</type>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>qeli-frontoffice-rest</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>qeli-frontoffice-service</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>qeli-frontoffice-service-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>qeli-frontoffice-editique-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>qeli-frontoffice-editique-mock</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>qeli-frontoffice-editique-impl</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.ge.cti.fwk.cmp.dialogue</groupId>
        <artifactId>OutilsRapportDialogue</artifactId>
        <version>${OutilsRapportDialogue.version}</version>
      </dependency>

      <!-- Additional dependencies -->
      <dependency>
        <groupId>com.captcha</groupId>
        <artifactId>botdetect</artifactId>
        <version>${botdetect-servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>com.captcha</groupId>
        <artifactId>botdetect-servlet</artifactId>
        <version>${botdetect-servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.icu</groupId>
        <artifactId>icu4j</artifactId>
        <version>${icu4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>com.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>${opencsv.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.velocity</groupId>
        <artifactId>velocity-engine-core</artifactId>
        <version>${velocity.version}</version>
      </dependency>

      <!-- Test dependencies -->
      <dependency>
        <groupId>org.spockframework</groupId>
        <artifactId>spock-core</artifactId>
        <version>${spock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.spockframework</groupId>
        <artifactId>spock-spring</artifactId>
        <version>${spock.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <dependencies>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-spring</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-json</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${exec-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <configuration>
            <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
            <commitIdGenerationMode>flat</commitIdGenerationMode>
            <failOnNoGitDirectory>false</failOnNoGitDirectory>
            <abbrevLength>8</abbrevLength>
            <offline>true</offline>
            <gitDescribe>
              <skip>true</skip>
            </gitDescribe>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.amashchenko.maven.plugin</groupId>
          <artifactId>gitflow-maven-plugin</artifactId>
          <version>${gitflow-maven-plugin.version}</version>
          <configuration>
            <commitDevelopmentVersionAtStart>true</commitDevelopmentVersionAtStart>
            <useSnapshotInHotfix>true</useSnapshotInHotfix>
            <useSnapshotInRelease>true</useSnapshotInRelease>
            <versionDigitToIncrement>1</versionDigitToIncrement>
            <updateVersionDigitToIncrement>1</updateVersionDigitToIncrement>
            <hotfixVersionDigitToIncrement>2</hotfixVersionDigitToIncrement>
            <gitFlowConfig>
              <productionBranch>main</productionBranch>
            </gitFlowConfig>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.gmavenplus</groupId>
          <artifactId>gmavenplus-plugin</artifactId>
          <version>${gmavenplus-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jvnet.jaxb2.maven2</groupId>
          <artifactId>maven-jaxb2-plugin</artifactId>
          <version>${maven-jaxb2-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <annotationProcessorPaths>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>${lombok-mapstruct.version}</version>
            </path>
            <path>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-configuration-processor</artifactId>
              <version>${spring-boot.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <doclint>all,-reference</doclint>
          <failOnError>false</failOnError>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <phase>deploy</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>deploy</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <configuration>
          <targetBytecode>${java.version}</targetBytecode>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>addTestSources</goal>
              <goal>compileTests</goal>
              <goal>removeTestStubs</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <configuration>
          <destFile>${sonar.jacoco.reportPath}</destFile>
          <append>true</append>
        </configuration>
        <executions>
          <execution>
            <id>jacoco-prepare-and-report</id>
            <goals>
              <goal>prepare-agent</goal>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>report-aggregate</id>
            <phase>verify</phase>
            <goals>
              <goal>report-aggregate</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/../target/site/jacoco-aggregate</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
